# This is a basic workflow to help you get started with Actions

name: Release + Publish to Docker Hub + deploy to VPS

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+*' # Push events to matching v*, i.e. 1.0, 20.15.10

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      version:
        description: 'Version'     
        required: true

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
    deploy:
      name: "Release"
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@master
        
        - name: Publish to Docker Hub
          uses: elgohr/Publish-Docker-Github-Action@master
          with:
            name: ${{ secrets.DOCKER_HUB_REPO }}
            username: ${{ secrets.DOCKER_USERNAME }}
            password: ${{ secrets.DOCKER_PASSWORD }}
            tags: "latest, ${{ github.event.inputs.version || github.ref }}"

        - name: Create GitHub Release
          id: create_release
          uses: actions/create-release@v1
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
          with:
            tag_name: ${{ github.event.inputs.version || github.ref }}
            release_name: Release ${{ github.event.inputs.version || github.ref }}
            # body: changelog
            draft: false
            prerelease: false

        - name: Configure SSH
          run: |
            mkdir -p ~/.ssh/
            echo "$SSH_KEY" > ~/.ssh/staging.key
            chmod 600 ~/.ssh/staging.key
            cat >>~/.ssh/config <<END
            Host staging
              HostName $SSH_HOST
              User $SSH_USER
              IdentityFile ~/.ssh/staging.key
              StrictHostKeyChecking no
            END
          env:
            SSH_USER: ${{ secrets.DEPLOY_SERVER_USERNAME }}
            SSH_KEY: ${{ secrets.DOCKER_SSH_PRIVATE_KEY }}
            SSH_HOST: ${{ secrets.DEPLOY_SERVER_HOST }}
          
        - name: Deploy to docker container on VPS
          uses: appleboy/ssh-action@master
          with:
            host: ${{ secrets.DEPLOY_SERVER_HOST }}
            username: ${{ secrets.DEPLOY_SERVER_USERNAME }}
            key: ${{ secrets.DOCKER_SSH_PRIVATE_KEY }}
            port: ${{ secrets.DEPLOY_SERVER_PORT }}
            script: |
              docker ps
              docker pull forichok/tgwarden
              docker stop twarden
              docker rm twarden 
              docker run --restart always -e BOT_TOKEN=${{ secrets.BOT_TOKEN }} -e TO_TRANSLATE='ru' -d --name twarden ${{ secrets.DOCKER_HUB_REPO }}
